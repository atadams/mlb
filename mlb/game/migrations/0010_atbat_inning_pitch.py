# Generated by Django 2.2.8 on 2019-12-14 19:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0009_game_game_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('play_guid', models.CharField(blank=True, max_length=50)),
                ('pitch_id', models.IntegerField()),
                ('pitch_result', models.CharField(choices=[('B', 'ball'), ('S', 'strike'), ('X', 'in play')], max_length=10, verbose_name='pitch result')),
                ('pitch_code', models.CharField(max_length=10)),
                ('pitch_datetime', models.DateTimeField()),
                ('game_pitch_id', models.CharField(blank=True, max_length=30)),
                ('event_number', models.IntegerField()),
                ('start_speed', models.DecimalField(decimal_places=2, max_digits=7)),
                ('end_speed', models.DecimalField(decimal_places=2, max_digits=7)),
                ('break_y', models.DecimalField(decimal_places=2, max_digits=6)),
                ('break_angle', models.DecimalField(decimal_places=2, max_digits=6)),
                ('break_length', models.DecimalField(decimal_places=2, max_digits=6)),
                ('pitch_type', models.CharField(choices=[('CU', 'Curveball'), ('KC', 'Knuckle Curve'), ('SC', 'Screwball'), ('SL', 'Slider'), ('CH', 'Changeup'), ('KN', 'Knuckleball'), ('EP', 'Eephus'), ('FC', 'Cutter'), ('FF', 'Four-seam Fastball'), ('FS', 'Splitter'), ('FT', 'Two-seam Fastball'), ('SI', 'Sinker'), ('FO', 'Pitchout'), ('PO', 'Pitchout 2'), ('IN', 'Intentional Ball'), ('UN', 'Unknown'), ('AB', 'Unidentified'), ('FA', 'Unidentified 2')], max_length=10)),
                ('pitch_type_confidence', models.DecimalField(decimal_places=3, max_digits=6)),
                ('zone', models.IntegerField()),
                ('nasty', models.IntegerField()),
                ('spin_dir', models.DecimalField(decimal_places=3, max_digits=8)),
                ('spin_rate', models.DecimalField(decimal_places=3, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Inning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inning', models.IntegerField()),
                ('top_bottom', models.CharField(choices=[('top', 'Top'), ('bottom', 'Bottom')], max_length=10)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game')),
            ],
        ),
        migrations.CreateModel(
            name='AtBat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('play_guid', models.CharField(blank=True, max_length=50)),
                ('at_bat_number', models.IntegerField()),
                ('home_team_runs', models.IntegerField(default=0)),
                ('away_team_runs', models.IntegerField(default=0)),
                ('balls', models.IntegerField()),
                ('strikes', models.IntegerField()),
                ('outs', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=512)),
                ('event_number', models.IntegerField()),
                ('event', models.CharField(blank=True, max_length=100)),
                ('batter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='at_bat_batter', to='game.Player')),
                ('inning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Inning')),
                ('pitcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='at_bat_pitcher', to='game.Player')),
            ],
        ),
    ]
